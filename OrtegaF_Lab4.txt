package Lab4;

public class Lab4 {

	public static void main(String[] args) {
		
		System.out.println(sumLimit(2, 3));
		System.out.println(sumLimit(8, 3));
		System.out.println(sumLimit(8, 1));
		System.out.println(squirlPlay(70, true));
		System.out.println(squirlPlay(95, false));
		System.out.println(squirlPlay(95, true));
		System.out.println(greenTicket(1, 2, 3));
		System.out.println(greenTicket(2, 2, 2));
		System.out.println(greenTicket(1, 1, 2));
		System.out.println(countXX("abcxx"));
		System.out.println(countXX("xxx"));
		System.out.println(countXX("xxxx"));
		System.out.println(stringTimes("Hi", 2));
		System.out.println(stringTimes("Hi", 3));
		System.out.println(stringTimes("Hi", 1));
		
		//Given 2 non-negative ints, a and b, return their sum, so 
		//long as the sum has the same number of digits as a. If the 
		//sum has more digits than a, just return a without b. 	
	}
	
	public static int sumLimit(int a, int b){
		int sum = a + b;
		String sumDigits = Integer.toString(sum);
		String aDigits = Integer.toString(a);
		
		
		if(sumDigits.length() > aDigits.length()){
			return a;
		}
		else {
			return sum;
		}
	}
		//The squirrels in Palo Alto spend most of the day playing. 
		//In particular, they play if the temperature is between 60 and 90 (inclusive). 
		//Unless it is summer, then the upper limit is 100 instead of 90. 
		//Given an int temperature and a boolean isSummer, return true if the squirrels play and false otherwise.
		
		public static boolean squirlPlay(int temp, boolean isSummer) {
			if(isSummer == true) {
				if(temp > 60 && temp < 100) {
					return true;
				}
				else {
					return false;
				}
			}else {
				if(temp > 60 && temp < 90) {
					return true;
				}
				else {
					return false;
				}
				
			}
		}
		
		//You have a green lottery ticket, with ints a, b, and c on it. If the numbers 
		//are all different from each other, the result is 0. If all of the numbers are 
		//the same, the result is 20. If two of the numbers are the same, the result is 10.
		public static int greenTicket(int num1, int num2, int num3) {
			if(num1 == num2 && num1 == num3 && num2 == num3) {
				return 20;
			}
			else if(num1 != num2 && num1 != num3 && num2 != num3) {
				return 0;
			}
			else {
				return 10;
			}
		}
		//Count the number of "xx" in the given string. We'll say that overlapping is allowed, 
		//so "xxx" contains 2 "xx".
		public static int countXX(String xx) {
			int count = 0;
			for(int i = 0; i < xx.length()-1; i++) {
				if(xx.charAt(i) == 'x' && xx.charAt(i+1) == 'x') {
					count++;
					
				}
			} return count;
			
		
		}
		//Given a string and a non-negative int n, return a larger string that 
		//is n copies of the original string.
		public static String stringTimes(String ogStr, int n) {
		
			String str = "";
			for (int i = 0; i < n; i++) {
				str += ogStr;
			}
			
			return str;
		}
}
